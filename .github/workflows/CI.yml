name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: macos-latest

    strategy:
      matrix:
        env:
          - sdk: iphonesimulator
            destination: name=iPhone 11
          
          - sdk: macosx
            destination: arch=x86_64

    steps:
    - uses: actions/checkout@v1
    
    - name: Setup ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'
    
    - name: Select Xcode
      run: sudo xcode-select -s /Applications/Xcode_11.3.1.app
      
    - name: Cache RubyGems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gem-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gem-
            
    - name: Cache Mint packages
      uses: actions/cache@v1
      with:
        path: mint
        key: ${{ runner.os }}-mint-${{ hashFiles('**/Mintfile') }}
        restore-keys: |
          ${{ runner.os }}-mint-
            
    - name: Bundle install
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        
    - name: Install Mint and Packages
      run: |
        brew install mint
        mint bootstrap

    - name: Generate Xcode Project
      run: swift package generate-xcodeproj
      
    - name: Run Danger
      run: bundle exec danger
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and Test
      run: |
        set -o pipefail
        xcodebuild clean build test \
          -project "$PROJECT" \
          -scheme "$SCHEME" \
          -sdk "$SDK" \
          -destination "$DESTINATION" \
          -configuration Debug | xcpretty -c;
      env:
        PROJECT: Pixela.xcodeproj
        SCHEME: Pixela-Package
        SDK: ${{ matrix.env.sdk }}
        DESTINATION: ${{ matrix.env.destination }}
